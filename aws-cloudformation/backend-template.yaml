AWSTemplateFormatVersion: '2010-09-09'
Description: 'Research Base Backend on AWS Lambda'

Parameters:
  OpenAIApiKey:
    Type: String
    Description: OpenAI API Key
    NoEcho: true
  
  NotionApiKey:
    Type: String
    Description: Notion API Key
    NoEcho: true
  
  NotionDatabaseId:
    Type: String
    Description: Notion Database ID
    Default: 26bb3dee574080918494dccf1c1d9da2

Resources:
  # Lambda Function
  ResearchBaseFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: research-base-backend
      Runtime: nodejs18.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return {
              statusCode: 200,
              body: JSON.stringify({
                message: 'Research Base Backend',
                timestamp: new Date().toISOString()
              })
            };
          };
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAIApiKey
          NOTION_API_KEY: !Ref NotionApiKey
          NOTION_DATABASE_ID: !Ref NotionDatabaseId
          AWS_S3_BUCKET: research-base-angelina
          AWS_REGION: us-east-1

  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                Resource: 
                  - arn:aws:s3:::research-base-angelina/*
        - PolicyName: TextractAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - textract:*
                Resource: '*'

  # API Gateway
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: research-base-api
      Description: Research Base Backend API

  # API Gateway Deployment
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethod
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: prod

  # API Gateway Method
  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !GetAtt ApiGateway.RootResourceId
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ResearchBaseFunction.Arn}/invocations'

  # Lambda Permission for API Gateway
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ResearchBaseFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*'

Outputs:
  ApiUrl:
    Description: API Gateway URL
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod'
    Export:
      Name: ResearchBaseApiUrl
  
  LambdaFunctionArn:
    Description: Lambda Function ARN
    Value: !GetAtt ResearchBaseFunction.Arn
    Export:
      Name: ResearchBaseLambdaArn
