const { Client } = require('@notionhq/client');
require('dotenv').config({ path: './.env.local' });

const notion = new Client({ auth: process.env.VITE_NOTION_API_TOKEN });

async function simpleAdd() {
  try {
    console.log('üöÄ –ü—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–ª—è–º–∏...');
    
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π –ø–æ–ª–µ–π
    const fieldVariants = [
      'Title',
      'Name', 
      'title',
      'name',
      'TitleOriginal',
      'title_original',
      'Research Title',
      'Research Title Original'
    ];
    
    for (const fieldName of fieldVariants) {
      try {
        console.log(`\nüß™ –ü—Ä–æ–±—É–µ–º –ø–æ–ª–µ: ${fieldName}`);
        
        const response = await notion.pages.create({
          parent: { database_id: process.env.VITE_NOTION_DATABASE_ID },
          properties: {
            [fieldName]: { 
              title: [{ text: { content: `–¢–µ—Å—Ç —Å –ø–æ–ª–µ–º ${fieldName}` } }] 
            }
          }
        });

        console.log(`‚úÖ –£—Å–ø–µ—Ö —Å –ø–æ–ª–µ–º: ${fieldName}`);
        console.log('ID:', response.id);
        console.log('URL:', response.url);
        return; // –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, –≤—ã—Ö–æ–¥–∏–º
        
      } catch (error) {
        console.log(`‚ùå ${fieldName}: ${error.message}`);
      }
    }
    
    console.log('\n‚ùå –ù–∏ –æ–¥–Ω–æ –ø–æ–ª–µ –Ω–µ –ø–æ–¥–æ—à–ª–æ. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.');
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

simpleAdd();
