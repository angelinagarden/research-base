const { Client } = require('@notionhq/client');
require('dotenv').config({ path: './.env.local' });

const notion = new Client({ auth: process.env.VITE_NOTION_API_TOKEN });

async function testAdd() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏...');
    
    // –ü—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    const response = await notion.pages.create({
      parent: { database_id: process.env.VITE_NOTION_DATABASE_ID },
      properties: {
        'Name': { 
          title: [{ text: { content: '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å' } }] 
        }
      }
    });

    console.log('‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
    console.log('ID:', response.id);
    console.log('URL:', response.url);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error('–ö–æ–¥:', error.code);
    
    // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –ø–æ–ª—è–º–∏, –ø–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥
    if (error.message.includes('property') || error.message.includes('field')) {
      console.log('\nüîç –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—è—Ö...');
      
      try {
        const db = await notion.databases.retrieve({ 
          database_id: process.env.VITE_NOTION_DATABASE_ID 
        });
        
        console.log('–ü–æ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
        if (db.properties) {
          Object.keys(db.properties).forEach(key => {
            console.log(`- ${key}`);
          });
        }
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª–µ–π:', err.message);
      }
    }
  }
}

testAdd();
